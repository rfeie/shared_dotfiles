

" BUNDLES

if &compatible
  set nocompatible
end

" Shim command and function to allow migration from Vundle to vim-plug.
function! VundleToPlug(vundle_command, arg, ...)
  echom "You are using Vundle's `".a:vundle_command."` command to declare plugins. Dotfiles now uses vim-plug for plugin management. Please rename uses of `".a:vundle_command."` to `Plug`. Plugin was '".a:arg."'."
  let vim_plug_options = {}

  if a:0 > 0
    if has_key(a:1, 'name')
      let name = a:1.name
      let vim_plug_options.dir = "$HOME/.vim/bundle/".a:1.name
    endif

    if has_key(a:1, 'rtp')
      let vim_plug_options.rtp = a:1.rtp
    endif
  endif

  Plug a:arg, vim_plug_options
endfunction

com! -nargs=+  -bar Plugin call VundleToPlug("Plugin", <args>)
com! -nargs=+  -bar Bundle call VundleToPlug("Bundle", <args>)

call plug#begin('~/.vim/bundle')

" Matching Tags
let g:mta_filetypes = {
    \ 'javascript.jsx' : 1,
    \}

" Neoformat
let g:neoformat_try_formatprg = 1

Plug 'soft-aesthetic/soft-era-vim'
Plug 'sbdchd/neoformat', { 'on': 'ToggleNeoformat' }
Plug 'christoomey/vim-run-interactive'
Plug 'mattn/emmet-vim'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'janko-m/vim-test'
Plug 'pbrisbin/vim-mkdir'
Plug 'slim-template/vim-slim'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-projectionist'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'vim-ruby/vim-ruby'
Plug 'vim-scripts/tComment'
Plug 'airblade/vim-gitgutter'
Plug 'digitaltoad/vim-jade'
Plug 'groenewege/vim-less'
Plug 'itchyny/lightline.vim'
Plug 'mileszs/ack.vim'
Plug 'ntpeters/vim-better-whitespace'
Plug 'othree/html5.vim'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-markdown'
Plug 'tpope/vim-vinegar'
Plug 'Valloric/vim-indent-guides'
Plug 'wavded/vim-stylus'
Plug 'wellle/targets.vim'
Plug 'zenorocha/dracula-theme'
Plug 'pangloss/vim-javascript'
Plug 'valloric/MatchTagAlways'
Plug 'mxw/vim-jsx'
Plug 'mattn/emmet-vim'
Plug 'xolox/vim-session'
Plug 'xolox/vim-misc'

" ES2015 code snippets
Plug 'epilande/vim-es2015-snippets'

" React code snippets (Optional)
Plug 'epilande/vim-react-snippets'

" Ultisnips
Plug 'SirVer/ultisnips'

" Syntax
Plug 'w0rp/ale'

" Prettier Integration
Plug 'sbdchd/neoformat'


" Plug 'jelera/vim-javascript-syntax'
" Plug 'chemzqm/vim-jsx-improve'
Plug 'nono/jquery.vim'
" Plug 'isruslan/vim-es6'
Plug 'posva/vim-vue'

let g:UltiSnipsExpandTrigger="<C-l>"

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()

